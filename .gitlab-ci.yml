# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml


include:
  # 1: include the component
  - component: gitlab.com/to-be-continuous/node/gitlab-ci-node@3.12.0
    # 2: set/override component inputs
    inputs:
      image: "registry.hub.docker.com/library/node:18"
      lint-enabled: true

stages:          # List of stages for jobs, and their order of execution
  - scan
  - build
  - deploy

container-scan:
  stage: scan
  image:
    name: snyk/snyk:docker
    entrypoint: [""]
  variables:
    SNYK_TOKEN: $SNYK_TOKEN
  services:
    - docker:20.10.11-dind
  script:
    - docker build -t app:$CI_COMMIT_SHORT_SHA . 
    - snyk auth $SNYK_TOKEN
    - snyk container test app:$CI_COMMIT_SHORT_SHA --file=Dockerfile

build-job:   # This job runs in the test stage.
  stage: build    # It only starts when the job in the build stage completes successfully
  script:
    - echo "Building the application..."

# deploy-job:      # This job runs in the deploy stage.
#   stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#   environment: production
#   script:
#     - echo "Deploying application..."
#     - echo "Application successfully deployed."
